javascript functions - serve para escrever "modulos/chunks" de códigos reutilizaveis, sendo possivel usar eles em um momento posterior
1º passo: definir a função; 2º passo: executar a função

como definir uma função:
    function nomefunção() {
        //código
    }
como executar uma função:
nomefunção() --> obs: algumas funções aceitam args(inputs) dentro dos parentêses

--//--//--//--//--//--//--//

arguments/inputs: 
funções podem aceitar inputs (assim como os methods em arrays, strings..., alterando seu resultado)
exemplo:

function bomdia(nome) {
    console.log(`Bom dia ${nome}`)
}

executando:
bomdia('Gabriel') --> retorna no console Bom dia Gabriel

multiplos argumentos:
function media(nota1,nota2,nota3) {
    console.log((nota1 + nota2 + nota3)/3) 
}

let a1 = parseInt(prompt('nota1'))
let a2 = parseInt(prompt('nota2'))
let a3 = parseInt(prompt('nota3'))

media(a1,a2,a3)

function bomdia2(primeironome, sobrenome) {
    console.log(`Bom dia ${primeironome} ${sobrenome}`)
}

return --//--//--//--//--//--//--

metodos como toUpperCase e indexOf podem ser guardados, por exemplo
let gritar = "fica quieto".toUpperCase()
gritar //FICA QUIETO
return serve para guardar os valores de funções

exemplo:
function soma(a,b) {
    let resultado = a+b
    return resultado
    console.log(resultado) //nunca é executado, pois o return para a função
}

vale lembrar que return para a execução da função



